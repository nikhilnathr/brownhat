<!DOCTYPE HTML><html><head>	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">          <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no">	<title>Text editor</title><style>*{margin:0;padding:0;}html{height:100%;}body{height:100%;font-family:Comic Sans MS,cursive,sans-serif;}#menu{position:fixed;top:30px;height:20px;width:100%;border-top:1px solid #000;border-bottom:1px solid #000;background:#ddd;padding-bottom:5px;}#menu button{ border:none; background:none; padding-bottom:5px;  padding-left:8px;  height:20px; }#workspace{width:100%;margin-top:55px;padding-top:10px;height:calc(100%);border:none;font-family:arial,sans-serif;font-size:1em;background:#fff;}#title{position:fixed;top:0;height:30px;width:calc(100% - 8px);border-bottom:2px solid #000;font-size:1.3em;padding-left:8px;background:linear-gradient(#000,#000,#555);color:rgb(255,180,80);}</style></head><body>	<input type="file" id="fileinput" hidden/> <div id="title">calculator.html</div>  <div id="menu">       <button id="open">Open</button>       <button id="save">Save</button>       <button id="info">Info</button>       <button id="font">Font</button>       <button id="family">Style</button>  </div><textarea id="workspace">jjsjj</textarea><script type="text/javascript">  function readSingleFile(evt) {    //Retrieve the first (and only!) File from the FileList object    var f = evt.target.files[0];     if (f) {      var r = new FileReader();      r.onload = function(e) { 	      var contents = e.target.result;        alert( "Got the file.\n"               +"name: " + f.name + "\n"              +"type: " + f.type + "\n"              +"size: " + f.size + " bytes\n"              + "starts with: " + contents.substr(1, contents.indexOf("\n")) + "\n"              + "Modified: " + f.lastModifiedDate.toLocaleDateString()         );        document.getElementById("title").innerHTML=f.name;      document.getElementById("workspace").value=contents;                                      }      r.readAsText(f,"UTF-8");    } else {       alert("Failed to load file");    }  }   document.getElementById("open").onclick=function(){         document.getElementById('fileinput').click();     }  document.getElementById('fileinput').addEventListener('change', readSingleFile, false); document.getElementById("info").onclick=function(){              }document.getElementById("save").onclick=function(){	var textToWrite = document.getElementById("workspace").value;	var textFileAsBlob = new Blob([textToWrite], {type:'text/plain'});	var fileNameToSaveAs = prompt("Please Enter A File Name");	var downloadLink = document.createElement("a");	downloadLink.download = fileNameToSaveAs;	downloadLink.innerHTML = "Download File";         if (window.webkitURL != null)	{		// Chrome allows the link to be clicked		// without actually adding it to the DOM.		downloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob);	}	else	{		// Firefox requires the link to be added to the DOM		// before it can be clicked.		downloadLink.href = window.URL.createObjectURL(textFileAsBlob);		downloadLink.onclick = destroyClickedElement;		downloadLink.style.display = "none";		document.body.appendChild(downloadLink);	}	downloadLink.click();}document.getElementById("font").onclick=function(){var sz=prompt("Enter A Numerical Font Size In Pixels");document.getElementById("workspace").setAttribute("style","font-size:"+sz+"px;");}document.getElementById("family").onclick=function(){var sz=prompt("Enter A Font Name");document.getElementById("workspace").setAttribute("style","font-family:"+sz+";");}</script></body></html>